# @package _global_

# specify here default configuration
# order of defaults determines the order in which configs override each other
defaults:
  - _self_
  - data: default.yaml
  - model: default.yaml
  - net: dissect-spatial.yaml
  - callbacks: default.yaml
  - logger: wandb.yaml # set logger here or use command line (e.g. `python train.py logger=tensorboard`)
  - trainer: default.yaml

  # experiment configs allow for version control of specific hyperparameters
  # e.g. best hyperparameters for given model and datamodule
  - experiment: null

  # config for hyperparameter optimization
  - hparams_search: null

  # debugging config (enable through command line, e.g. `python train.py debug=default)
  - debug: null

# task name, determines output directory path
task_name: "train"

# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
# appending lists from command line is currently not supported :(
# https://github.com/facebookresearch/hydra/issues/1547
tags: ["dev"]

# set False to skip model training
train: True

# evaluate on test set, using best model weights achieved during training
# lightning chooses best weights based on the metric specified in checkpoint callback
test: False

# simply provide checkpoint path to resume training
ckpt_path: null

# seed for random number generators in pytorch, numpy and python.random
seed: 42

# some extra settings
extras:
  # disable python warnings if they annoy you
  ignore_warnings: True

  # ask user for tags if none are provided in the config
  enforce_tags: False

  # pretty print config tree at the start of the run using Rich library
  print_config: True

hydra:
  run:
    dir: ${paths.log_dir}/${task_name}/runs/${now:%Y-%m-%d}_${now:%H-%M-%S}
  sweep:
    dir: ${paths.log_dir}/${task_name}/multiruns/${now:%Y-%m-%d}_${now:%H-%M-%S}
    subdir: ${hydra.job.num}

paths:
  # path to root directory
  # this requires PROJECT_ROOT environment variable to exist
  # you can replace it with "." if you want the root to be the current working directory
  root_dir: ${oc.env:PROJECT_ROOT}

  # path to data directory
  data_dir: ${paths.root_dir}/data/

  # path to logging directory
  log_dir: ${paths.root_dir}/logs/

  # path to output directory, created dynamically by hydra
  # path generation pattern is specified in `configs/hydra/default.yaml`
  # use it to store all files generated during the run, like ckpts and metrics
  output_dir: ${hydra:runtime.output_dir}

  # path to working directory
  work_dir: ${hydra:runtime.cwd}