devtools::install_github("https://github.com/MarcElosua/SPOTlight")
devtools::install_git("https://github.com/MarcElosua/SPOTlight")
install.packages("devtools")
devtools::install_github("https://github.com/MarcElosua/SPOTlight")
devtools::install_git("https://github.com/MarcElosua/SPOTlight")
library(SPOTlight)
import(Seurat)
library(Seurat)
exit()
quit()
library(SPOTlight)
library(SPOTlight)
path_to_data <- system.file(package = "SPOTlight")
cortex_sc <- readRDS(glue::glue("{path_to_data}/allen_cortex_dwn.rds"))
counts <- cortex_sc$RNA@counts
counts <- as.data.frame(cortex_sc$RNA@counts)
metadata <- cortex_sc@meta.data
counts
head(counts)
dim(counts)
getcwd()
getwd()
# Read RDS
data <- readRDS("Downloads/P16205_1001_S1_RCTDresults.rds")
data
data.obs
data$`B cells`
data$obs
data$ident
data$orig.ident
data@meta.data
library(GEOquery)
BiocManager::install("GEOquery")
ex
library(GEOquery)
library(limma)
library(umap)
install.packages("umap")
library(umap)
gset <- getGEO("GSE107990", GSEMatrix =TRUE, getGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL10558", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
ex <- exprs(gset)
dim(ex)
colnames(ex)
rownames(ex)
max(ex)
min(ex)
source("https://bioconductor.org/biocLite.R")
biocLite("illuminaHumanv4.db")
# load library
library(illuminaHumanv4.db)
biocLite("illuminaHumanv4.db")
library((biocLite))
BiocManager::install("illuminaHumanv4.db")
library(illuminaHumanv4.db)
IL_ids <- row.names(ex)
select(illuminaHumanv4.db,
keys = IL_ids,
columns=c("SYMBOL","REFGENE"),
keytype="PROBEID")
select(illuminaHumanv4.db,
keys = ex,
columns=c("SYMBOL","REFGENE"),
keytype="PROBEID")
select(illuminaHumanv4.db,
keys = ex,
columns=c("SYMBOL"),
keytype="PROBEID")
select(illuminaHumanv4.db,
keys = IL_ids,
columns=c("SYMBOL"),
keytype="PROBEID")
IL_gene_pairs <- select(illuminaHumanv4.db,
keys = IL_ids,
columns=c("SYMBOL"),
keytype="PROBEID")
IL_gene_pairs <- select(illuminaHumanv4.db,
keys = IL_ids,
columns=c("SYMBOL"),
keytype="PROBEID")
IL_gene_pairs
ex <- exprs(gset)
IL_ids <- row.names(ex)
IL_gene_pairs <- select(illuminaHumanv4.db,
keys = IL_ids,
columns=c("SYMBOL"),
keytype="PROBEID")
data <- as.data.frame(IL_gene_pairs)
data
write.csv(data, "GSE107990_IL_gene_pairs.txt")
write.csv(ex, "GSE107990_IL.txt")
data <- as.data.frame(IL_gene_pairs)
list.files()
gset
gset1 <- as.data.frame(gset)
gset1
dim(gset1)
gset1$title
gset1 <- gset1[:c("title")]
colnames(gset1)
rownames(gset1)
gset1 <- gset1[,"title"]
gset1
gset1 <- as.data.frame(gset)
gset1 <- gset1[,"title"]
gset1
write.csv(gset1, "GSM_sampleName.txt")
gset1 <- as.data.frame(gset)
gset2 <- gset1[,"title"]
rownames(gset2) <- rownames(gset1)
gset1 <- as.data.frame(gset)
gset2 <- gset1[,"title"]
rownames(gset2) <- row.names(gset1)
gset1 <- as.data.frame(gset)
gset2 <- as.data.frame(gset1[,"title"])
row.ames(gset2) <- row.names(gset1)
rownames(gset2) <- row.names(gset1)
write.csv(gset12 "GSM_sampleName.txt")
write.csv(gset2, "GSM_sampleName.txt")
library(GEOquery)
library(limma)
library(umap)
# load series and platform data from GEO
gset <- getGEO("GSE65135", GSEMatrix =TRUE, getGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
ex <- exprs(gset)
# log2 transform
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))
LogC <- (qx[5] > 100) ||
(qx[6]-qx[1] > 50 && qx[2] > 0)
if (LogC) { ex[which(ex <= 0)] <- NaN
ex <- log2(ex) }
ex
lymph14 = ex[,5:]
lymph14 = ex[,5:dim(ex)[2]]
lymph14
dim(lymph14)
lymph14 = ex[,5:19]
colnames(lymph14)
lymph14 = ex[,5:14]
lymph14 = ex[,5:18]
dim(lymph14)
require("biomaRt")
mart <- useMart("ENSEMBL_MART_ENSEMBL")
mart <- useDataset("hsapiens_gene_ensembl", mart)
annotLookup <- getBM(
mart=mart,
attributes=c(
"affy_hg_u133_plus_2",
"ensembl_gene_id",
"gene_biotype",
"external_gene_name"),
filter = "affy_hg_u133_plus_2",
values = rownames(lymph14)[1:50], uniqueRows=TRUE)
mart <- useMart("ENSEMBL_MART_ENSEMBL")
mart <- useDataset("hsapiens_gene_ensembl", mart)
BiocManager::install('grimbough/biomaRt')
library(biomaRt)
mart <- useMart("ENSEMBL_MART_ENSEMBL")
mart <- useDataset("hsapiens_gene_ensembl", mart)
annotLookup <- getBM(
mart=mart,
attributes=c(
"affy_hg_u133_plus_2",
"ensembl_gene_id",
"gene_biotype",
"external_gene_name"),
filter = "affy_hg_u133_plus_2",
values = rownames(lymph14)[1:50], uniqueRows=TRUE)
mart <- useMart("ENSEMBL_MART_ENSEMBL")
annotLookup
os.getwd()
getwd()
lymph14.write("Desktop/lymph14.csv")
write.csv(lymph14, "Desktop/lymph14.csv")
gset <- getGEO("GSE65135", GSEMatrix =TRUE, getGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
ex <- exprs(gset)
library(GEOquery)
library(limma)
library(umap)
gset <- getGEO("GSE65135", GSEMatrix =TRUE, getGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
ex <- exprs(gset)
# log2 transform
ex <- log2(ex) }
lymph14 = ex[,5:18]
# log2 transform
ex <- log2(ex)
lymph14 = ex[,5:18]
lymph14
write.csv(lymph14, "Desktop/lymph14_log2.csv")
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("BrainCellularComposition")
library(ExperimentHub)
library(SummarizedExperiment)
eh = ExperimentHub()
query(eh , 'BrainCellularComposition')
fantom5 <- as.data.frame(eh[["EH7280"]])
head(fantom5)
eh
eh
query(eh , 'BrainCellularComposition')
nagy <- as.data.frame(eh[["EH7286"]])
head(nagy)
nagy
write.csv(nagy, "/Users/robin/Desktop/mx_deconvolution_human/sn_signature.csv")
setwd("/Users/robin/Desktop/simulation_spatial_benchmark/DSTG/DSTG/synthetic_data/")
list.files()
load("example_data.RDS")
readRDS("example_data.RDS")
data<-readRDS("example_data.RDS")
data
data[[1]]
data[[2]]
dim(data1)
dim(data)
dim(data[[1]])
data[[1]][1,2]
data[[1]][1,3]
rownmaes(data[[1]])
rownames(data[[1]])
colnames(data[[1]])
